//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CT.UI.SimulatorServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestInitializeSimulator", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class RequestInitializeSimulator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWindowLoadedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWindowLoaded {
            get {
                return this.IsWindowLoadedField;
            }
            set {
                if ((this.IsWindowLoadedField.Equals(value) != true)) {
                    this.IsWindowLoadedField = value;
                    this.RaisePropertyChanged("IsWindowLoaded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseInitializeSimulator", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class ResponseInitializeSimulator : CT.Common.Abstracts.ResponseBase, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimerIntervalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimerInterval {
            get {
                return this.TimerIntervalField;
            }
            set {
                if ((this.TimerIntervalField.Equals(value) != true)) {
                    this.TimerIntervalField = value;
                    this.RaisePropertyChanged("TimerInterval");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseFlightsCollection", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class ResponseFlightsCollection : CT.Common.Abstracts.ResponseBase, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CT.Common.DTO_Models.FlightDTO[] FlightsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CT.Common.DTO_Models.FlightDTO[] Flights {
            get {
                return this.FlightsField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightsField, value) != true)) {
                    this.FlightsField = value;
                    this.RaisePropertyChanged("Flights");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseFlightObject", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class ResponseFlightObject : CT.Common.Abstracts.ResponseBase, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CT.Common.DTO_Models.FlightDTO FlightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CT.Common.DTO_Models.FlightDTO Flight {
            get {
                return this.FlightField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightField, value) != true)) {
                    this.FlightField = value;
                    this.RaisePropertyChanged("Flight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseFlightPosition", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class ResponseFlightPosition : CT.Common.Abstracts.ResponseBase, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CheckpointSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckpointTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastCheckpointPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextCheckpointNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckpointSerial {
            get {
                return this.CheckpointSerialField;
            }
            set {
                if ((this.CheckpointSerialField.Equals(value) != true)) {
                    this.CheckpointSerialField = value;
                    this.RaisePropertyChanged("CheckpointSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckpointType {
            get {
                return this.CheckpointTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckpointTypeField, value) != true)) {
                    this.CheckpointTypeField = value;
                    this.RaisePropertyChanged("CheckpointType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastCheckpointPosition {
            get {
                return this.LastCheckpointPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.LastCheckpointPositionField, value) != true)) {
                    this.LastCheckpointPositionField = value;
                    this.RaisePropertyChanged("LastCheckpointPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextCheckpointName {
            get {
                return this.NextCheckpointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NextCheckpointNameField, value) != true)) {
                    this.NextCheckpointNameField = value;
                    this.RaisePropertyChanged("NextCheckpointName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseCheckpointDuration", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class ResponseCheckpointDuration : CT.Common.Abstracts.ResponseBase, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CheckpointDurationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CheckpointDuration {
            get {
                return this.CheckpointDurationField;
            }
            set {
                if ((this.CheckpointDurationField.Equals(value) != true)) {
                    this.CheckpointDurationField = value;
                    this.RaisePropertyChanged("CheckpointDuration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseDisposeFlight", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class ResponseDisposeFlight : CT.Common.Abstracts.ResponseBase, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestFlightObject", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class RequestFlightObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CT.Common.DTO_Models.FlightDTO[] CurrentFlightsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CT.Common.DTO_Models.FlightDTO[] CurrentFlights {
            get {
                return this.CurrentFlightsField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentFlightsField, value) != true)) {
                    this.CurrentFlightsField = value;
                    this.RaisePropertyChanged("CurrentFlights");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestFlightPosition", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class RequestFlightPosition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlightSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBoardingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string[]> LstvwNameFlightsListHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> TxtblckNameFlightNumberHashField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlightSerial {
            get {
                return this.FlightSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightSerialField, value) != true)) {
                    this.FlightSerialField = value;
                    this.RaisePropertyChanged("FlightSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBoarding {
            get {
                return this.IsBoardingField;
            }
            set {
                if ((this.IsBoardingField.Equals(value) != true)) {
                    this.IsBoardingField = value;
                    this.RaisePropertyChanged("IsBoarding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string[]> LstvwNameFlightsListHash {
            get {
                return this.LstvwNameFlightsListHashField;
            }
            set {
                if ((object.ReferenceEquals(this.LstvwNameFlightsListHashField, value) != true)) {
                    this.LstvwNameFlightsListHashField = value;
                    this.RaisePropertyChanged("LstvwNameFlightsListHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> TxtblckNameFlightNumberHash {
            get {
                return this.TxtblckNameFlightNumberHashField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtblckNameFlightNumberHashField, value) != true)) {
                    this.TxtblckNameFlightNumberHashField = value;
                    this.RaisePropertyChanged("TxtblckNameFlightNumberHash");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestCheckpointDuration", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class RequestCheckpointDuration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckpointSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckpointTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckpointSerial {
            get {
                return this.CheckpointSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckpointSerialField, value) != true)) {
                    this.CheckpointSerialField = value;
                    this.RaisePropertyChanged("CheckpointSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckpointType {
            get {
                return this.CheckpointTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckpointTypeField, value) != true)) {
                    this.CheckpointTypeField = value;
                    this.RaisePropertyChanged("CheckpointType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestDisposeFlight", Namespace="http://schemas.datacontract.org/2004/07/CT.Contracts.SimDataContracts")]
    [System.SerializableAttribute()]
    public partial class RequestDisposeFlight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlightSerialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightSerial {
            get {
                return this.FlightSerialField;
            }
            set {
                if ((this.FlightSerialField.Equals(value) != true)) {
                    this.FlightSerialField = value;
                    this.RaisePropertyChanged("FlightSerial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SimulatorServiceReference.ISimService", CallbackContract=typeof(CT.UI.SimulatorServiceReference.ISimServiceCallback))]
    public interface ISimService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/InitializeSimulator", ReplyAction="http://tempuri.org/ISimService/InitializeSimulatorResponse")]
        CT.UI.SimulatorServiceReference.ResponseInitializeSimulator InitializeSimulator(CT.UI.SimulatorServiceReference.RequestInitializeSimulator req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/GetFlightsCollection", ReplyAction="http://tempuri.org/ISimService/GetFlightsCollectionResponse")]
        CT.UI.SimulatorServiceReference.ResponseFlightsCollection GetFlightsCollection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/CreateFlightObject", ReplyAction="http://tempuri.org/ISimService/CreateFlightObjectResponse")]
        CT.UI.SimulatorServiceReference.ResponseFlightObject CreateFlightObject(CT.UI.SimulatorServiceReference.RequestFlightObject req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/GetFlightPosition", ReplyAction="http://tempuri.org/ISimService/GetFlightPositionResponse")]
        CT.UI.SimulatorServiceReference.ResponseFlightPosition GetFlightPosition(CT.UI.SimulatorServiceReference.RequestFlightPosition req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/GetCheckpointDuration", ReplyAction="http://tempuri.org/ISimService/GetCheckpointDurationResponse")]
        CT.UI.SimulatorServiceReference.ResponseCheckpointDuration GetCheckpointDuration(CT.UI.SimulatorServiceReference.RequestCheckpointDuration req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/DisposeFlight", ReplyAction="http://tempuri.org/ISimService/DisposeFlightResponse")]
        CT.UI.SimulatorServiceReference.ResponseDisposeFlight DisposeFlight(CT.UI.SimulatorServiceReference.RequestDisposeFlight req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/GetFlight", ReplyAction="http://tempuri.org/ISimService/GetFlightResponse")]
        CT.Common.DTO_Models.FlightDTO GetFlight(int flightSerial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/InitializeDatabase", ReplyAction="http://tempuri.org/ISimService/InitializeDatabaseResponse")]
        void InitializeDatabase();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/OnLoad", ReplyAction="http://tempuri.org/ISimService/OnLoadResponse")]
        void OnLoad(bool isLoaded);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/OnPromotion", ReplyAction="http://tempuri.org/ISimService/OnPromotionResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.RequestInitializeSimulator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.ResponseInitializeSimulator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.ResponseFlightsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.RequestFlightObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.ResponseFlightObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.RequestFlightPosition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.ResponseFlightPosition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.RequestCheckpointDuration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.ResponseCheckpointDuration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.RequestDisposeFlight))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.UI.SimulatorServiceReference.ResponseDisposeFlight))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.Common.Abstracts.ResponseBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.Common.DTO_Models.FlightDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.Common.DTO_Models.FlightDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.Common.DTO_Models.CheckpointDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.Common.DTO_Models.ProcessDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CT.Common.DTO_Models.CheckpointDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        void OnPromotion(object flightSerial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimService/OnDispose", ReplyAction="http://tempuri.org/ISimService/OnDisposeResponse")]
        void OnDispose(int flightSerial);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimServiceChannel : CT.UI.SimulatorServiceReference.ISimService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimServiceClient : System.ServiceModel.DuplexClientBase<CT.UI.SimulatorServiceReference.ISimService>, CT.UI.SimulatorServiceReference.ISimService {
        
        public SimServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SimServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SimServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SimServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SimServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public CT.UI.SimulatorServiceReference.ResponseInitializeSimulator InitializeSimulator(CT.UI.SimulatorServiceReference.RequestInitializeSimulator req) {
            return base.Channel.InitializeSimulator(req);
        }
        
        public CT.UI.SimulatorServiceReference.ResponseFlightsCollection GetFlightsCollection() {
            return base.Channel.GetFlightsCollection();
        }
        
        public CT.UI.SimulatorServiceReference.ResponseFlightObject CreateFlightObject(CT.UI.SimulatorServiceReference.RequestFlightObject req) {
            return base.Channel.CreateFlightObject(req);
        }
        
        public CT.UI.SimulatorServiceReference.ResponseFlightPosition GetFlightPosition(CT.UI.SimulatorServiceReference.RequestFlightPosition req) {
            return base.Channel.GetFlightPosition(req);
        }
        
        public CT.UI.SimulatorServiceReference.ResponseCheckpointDuration GetCheckpointDuration(CT.UI.SimulatorServiceReference.RequestCheckpointDuration req) {
            return base.Channel.GetCheckpointDuration(req);
        }
        
        public CT.UI.SimulatorServiceReference.ResponseDisposeFlight DisposeFlight(CT.UI.SimulatorServiceReference.RequestDisposeFlight req) {
            return base.Channel.DisposeFlight(req);
        }
        
        public CT.Common.DTO_Models.FlightDTO GetFlight(int flightSerial) {
            return base.Channel.GetFlight(flightSerial);
        }
        
        public void InitializeDatabase() {
            base.Channel.InitializeDatabase();
        }
    }
}
